server:
  port: 9919

spring:
  application:
    name: webchat-bot-server
  #  激活指定环境
  profiles:
    active: sqlite
  jackson: # 返回JSON的全局时间格式
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  datasource:
    # Druid的其他属性配置
    druid:
      # 初始化时建立物理连接的个数
      initial-size: 5
      # 连接池的最小空闲数量
      min-idle: 5
      # 连接池最大连接数量
      max-active: 20
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 既作为检测的间隔时间又作为testWhileIdel执行的依据
      time-between-eviction-runs-millis: 60000
      # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接(配置连接在池中的最小生存时间)
      min-evictable-idle-time-millis: 30000
      # 用来检测数据库连接是否有效的sql 必须是一个查询语句(oracle中为 select 1 from dual)
      validation-query: select 1
      # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 是否缓存preparedStatement, 也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭。
      pool-prepared-statements: false
      # 置监控统计拦截的filters，去掉后监控界面sql无法统计，stat: 监控统计、Slf4j:日志记录、waLL: 防御sqL注入
      filters: stat,wall,slf4j
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: -1
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connect-properties:
        druid.stat.mergeSql: true
        druid.stat.slowSqlMillis: 5000
  # 需要增加文件路径匹配，不然会报错，导致项目起不来
  mvc:
    path match:
      matching-strategy: ANT_PATH_MATCHER
  # 异步任务线程池关闭时间
  task:
    execution:
      shutdown:
        await-termination: true
        await-termination-period: 300


# MyBatis-plus配置
mybatis-plus:
  # 注意：一定要对应mapper映射xml文件的所在路径
  mapper-locations: classpath:com/springboot/mapper/xml/*.xml
  # 别名类型包
  type-aliases-package: com.xiaomi.springboot.entity
  global-config:
    banner: false   # 是否 mybatis-plus 在控制台输出的logo
    db-config:
      # 全局逻辑删除的字段名
      logic-delete-field: deleted
      # 逻辑已删除值(默认为 1)
      logic-delete-value: 1
      # 逻辑未删除值(默认为 0)
      logic-not-delete-value: 0
      # 主键 自增  #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID", ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID"
      id-type: auto
  configuration:
    # 开启驼峰转换;
    map-underscore-to-camel-case: true
    # MyBatis日志打印类
    # log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl
    # log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl   # 关闭日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl         # 打印到控制台
    auto-mapping-behavior: full
# 日志设置
logging:
  config: classpath:logback-spring.xml
  level:
    root: info
